MODULE main
VAR
	biblioteca : {disponivel_todos, disponivel_leitores, indisponivel_todos};

	leitor : process Leitor(biblioteca);
	escritor : process Escritor(biblioteca);

	ASSIGN
	init (biblioteca) := disponivel_todos;

	SPEC
	!EF (leitor.estado = lendo & escritor.estado = escrevendo)
	SPEC
	!AF(biblioteca = indisponivel_todos -> EF(escritor.estado=ocioso) -> EF(leitor.estado=ocioso))
	SPEC
	AG!(escritor.estado=escrevendo & leitor.estado=lendo)



MODULE Escritor(Biblioteca)

	VAR
	estado : {ocioso, escrevendo};

	ASSIGN
	init(estado) := ocioso;

	next(estado):=
		case
		(estado = ocioso & Biblioteca = disponivel_todos): escrevendo;
		(estado = ocioso & Biblioteca = disponivel_leitores): ocioso;
		(estado = escrevendo) : ocioso;
		1: estado;
		esac;

	next(Biblioteca) :=
		case
		(estado = ocioso & Biblioteca = disponivel_todos): indisponivel_todos;
		(estado = ocioso & Biblioteca = disponivel_leitores  ): disponivel_leitores;
		(Biblioteca = indisponivel_todos): disponivel_todos;
		1: Biblioteca;
		esac;

MODULE Leitor(Biblioteca)

	VAR
	estado : {ocioso, entrando , lendo, saindo};

	ASSIGN
	init(estado) := ocioso;

	
	next(estado):=
		case
		(estado = ocioso & (Biblioteca = disponivel_todos | Biblioteca = disponivel_leitores )  ): lendo;
		(estado = ocioso & Biblioteca = indisponivel_todos): ocioso;
		(estado = lendo) : ocioso;
		1: estado;
		esac;

	next(Biblioteca) :=
		case
		(estado = ocioso & (Biblioteca = disponivel_todos| Biblioteca = disponivel_leitores )): disponivel_leitores;
		(estado = ocioso & Biblioteca = indisponivel_todos  ): indisponivel_todos;
		(Biblioteca = disponivel_leitores): disponivel_todos;
		1: Biblioteca;
		esac;