--Leitor = 0 e Escritor = 1

MODULE Pessoa(biblioteca, tipo)
	VAR
		estado : {parado, ativo};
	ASSIGN
		init(estado) := parado;
		next(estado):=
			case
			(estado = parado & biblioteca = livre) : ativo;
			(estado = parado & biblioteca = lendo & tipo=0) : ativo;
			(estado = parado & biblioteca = escrevendo) : parado;
			(estado = ativo) : parado;
			1: estado;
		esac;
		next(biblioteca) :=
			case
			(next(estado) = ativo & tipo = 0): lendo;
			(next(estado) = ativo & tipo = 1): escrevendo;
			1: biblioteca;
		esac;
	FAIRNESS
		running

MODULE main
	VAR
		biblioteca : {livre, lendo, escrevendo};
		escritor : process Pessoa(biblioteca, 1);
		escritor2 : process Pessoa(biblioteca, 1);

		leitor : process Pessoa(biblioteca, 0);
		leitor2 : process Pessoa(biblioteca, 0);
	ASSIGN
		init(biblioteca) := escrevendo;
		init(escritor.estado) := ativo;	

		next(escritor.estado) := 
			case
			(next(leitor.estado) = parado & next(leitor2.estado) = parado & next(escritor2.estado) = parado) : ativo;
			1:escritor.estado;
			esac;
		next(escritor2.estado) := 
			case
			(next(leitor.estado) = parado & next(leitor2.estado) = parado & next(escritor.estado) = parado) : ativo;
			1:escritor2.estado;
			esac;
		next(leitor.estado) := 
			case
			(next(escritor.estado) = parado & next(escritor2.estado) = parado) : ativo;
			1:leitor.estado;
			esac;
		next(leitor2.estado) := 
			case
			(next(escritor.estado) = parado & next(escritor2.estado) = parado) : ativo;
			1:leitor2.estado;
		esac;		

		next(biblioteca) :=
			case
			(next(escritor.estado = ativo | escritor2.estado = ativo)) : escrevendo;
			(next(leitor.estado = ativo | leitor2.estado = ativo)) : lendo;
			(next(escritor.estado) = parado & next(escritor2.estado) = parado & next(leitor.estado) = parado & next(leitor2.estado) = parado): livre;
			1: biblioteca;
		esac;
SPEC
	AG!( (escritor.estado = ativo & leitor.estado = ativo) | (escritor.estado = ativo & leitor2.estado = ativo))
SPEC
	AG!( (escritor2.estado = ativo & leitor.estado = ativo) | (escritor2.estado = ativo & leitor2.estado = ativo))
SPEC
	!AF(biblioteca = livre -> EF(escritor.estado=parado))
SPEC
	AG(escritor2.estado = parado -> AF(escritor2.estado = ativo))

